Referência: https://www.w3schools.com/css/default.asp

Autor do Estudo: Michael Douglas Bonfogo.
------------------------------------------------------------------
Tutorial CSS
------------------------------------------------------------------
CSS HOME

 CSS é a linguagem que usamos para definir o estilo de um documento HTML.
 CSS descreve como os elementos HTML devem ser exibidos.
 Este tutorial ensinará CSS do básico ao avançado.

------------------------------------------------------------------
Introdução CSS

 CSS é a linguagem que usamos para definir o estilo de uma página da web.

O que é CSS?
 CSS significa Cascading Style Sheets
 CSS descreve como os elementos HTML devem ser exibidos na tela, no papel ou em outra mídia
 CSS economiza muito trabalho. Ele pode controlar o layout de várias páginas da web de uma só vez
 Folhas de estilo externas são armazenadas em arquivos CSS

Por que usar CSS?
 CSS é usado para definir estilos para suas páginas da web, incluindo o design, layout e variações de exibição para diferentes dispositivos e tamanhos de tela.

<!DOCTYPE html>
<html>
<head>

<style>
body {
  background-color: lightblue;
}

h1 {
  color: white;
  text-align: center;
}

p {
  font-family: verdana;
  font-size: 20px;
}
</style>

</head>
<body>

<h1>My First CSS Example</h1>
<p>This is a paragraph.</p>

</body>
</html>


CSS resolveu um grande problema
 O HTML NUNCA teve a intenção de conter tags para formatar uma página da web!
 O HTML foi criado para descrever o conteúdo de uma página da web, como:

 <h1> Este é um título </h1>
 <p> Este é um parágrafo. </p>

 Quando tags como <font> e atributos de cor foram adicionados à especificação HTML 3.2, isso deu início a um pesadelo para os desenvolvedores da web. O desenvolvimento de grandes sites, onde fontes e informações de cores eram adicionadas a cada página, tornou-se um processo longo e caro.
 Para resolver esse problema, o World Wide Web Consortium (W3C) criou o CSS.
 CSS removeu a formatação de estilo da página HTML!

 CSS economiza muito trabalho!
 As definições de estilo são normalmente salvas em arquivos .css externos.
 Com um arquivo de folha de estilo externo, você pode alterar a aparência de um site inteiro alterando apenas um arquivo!

------------------------------------------------------------------
Sintaxe CSS

 Uma regra CSS consiste em um seletor e um bloco de declaração.

Sintaxe CSS

 Seletor CSS
 O seletor aponta para o elemento HTML que você deseja estilizar.
 O bloco de declaração contém uma ou mais declarações separadas por ponto e vírgula.
 Cada declaração inclui um nome de propriedade CSS e um valor, separados por dois pontos.
 Várias declarações CSS são separadas por ponto-e-vírgula e os blocos de declaração são cercados por chaves.

 Exemplo
 Neste exemplo, todos os elementos <p> serão alinhados ao centro, com uma cor de texto vermelha:

p {
  color: red;
  text-align: center;
}

 Exemplo Explicado
  p é um seletor em CSS (aponta para o elemento HTML que você deseja estilizar: <p>).
  color é uma propriedade e red é o valor da propriedade
 text-align é uma propriedade e center é o valor da propriedade
------------------------------------------------------------------
Seletores CSS

 Um seletor CSS seleciona o (s) elemento (s) HTML que você deseja estilizar.

Seletores CSS
 Os seletores CSS são usados ​​para "encontrar" (ou selecionar) os elementos HTML que você deseja estilizar.
 Podemos dividir os seletores CSS em cinco categorias:

 Seletores simples (selecione os elementos com base no nome, id, classe)
 Seletores combinadores (selecione os elementos com base em uma relação específica entre eles)
 Seletores de pseudoclasse (selecione os elementos com base em um determinado estado)
 Seletores de pseudoelementos (selecione e estilize uma parte de um elemento)
 Seletores de atributo (selecione os elementos com base em um atributo ou valor de atributo)
 Esta página explicará os seletores CSS mais básicos.

O seletor de elemento CSS
 O seletor de elemento seleciona elementos HTML com base no nome do elemento.

Exemplo
 Aqui, todos os elementos <p> na página serão alinhados ao centro, com uma cor de texto vermelha: 

p {
  text-align: center;
  color: red;
}


O seletor de id CSS
 O seletor de id usa o atributo id de um elemento HTML para selecionar um elemento específico.
 O id de um elemento é único dentro de uma página, então o seletor de id é usado para selecionar um elemento único!
 Para selecionar um elemento com um id específico, escreva um caractere hash (#), seguido pelo id do elemento.

Exemplo
 A regra CSS abaixo será aplicada ao elemento HTML com id = "para1": 

#para1 {
  text-align: center;
  color: red;
}

Nota: Um nome de id não pode começar com um número!


O seletor de classe CSS
 O seletor de classe seleciona elementos HTML com um atributo de classe específico.
 Para selecionar elementos com uma classe específica, escreva um ponto (.), Seguido do nome da classe.

Exemplo
 Neste exemplo, todos os elementos HTML com class = "center" serão vermelhos e alinhados ao centro: 

.center {
  text-align: center;
  color: red;
}

Você também pode especificar que apenas elementos HTML específicos devem ser afetados por uma classe.

 Exemplo
 Neste exemplo, apenas os elementos <p> com class = "center" serão vermelhos e alinhados ao centro: 

p.center {
  text-align: center;
  color: red;
}

Os elementos HTML também podem se referir a mais de uma classe.

 Exemplo
 Neste exemplo, o elemento <p> será estilizado de acordo com class = "center" e class = "large": 

 <p class="center large">This paragraph refers to two classes.</p>


<html>
<head>
<style>
p.center {
  text-align: center;
  color: red;
}

p.large {
  font-size: 300%;
}
</style>
</head>
<body>

<h1 class="center">This heading will not be affected</h1>
<p class="center">This paragraph will be red and center-aligned.</p>
<p class="center large">This paragraph will be red, center-aligned, and in a large font-size.</p> 

</body>
</html>

Nota: o nome de uma classe não pode começar com um número!

O seletor universal CSS
 O  seletor universal (*) seleciona todos os elementos HTML na página.

Exemplo
 A regra CSS abaixo afetará todos os elementos HTML da página: 

* {
  text-align: center;
  color: blue;
}

O seletor de agrupamento CSS
 O seletor de agrupamento seleciona todos os elementos HTML com as mesmas definições de estilo.
 Observe o seguinte código CSS (os elementos h1, h2 e p têm as mesmas definições de estilo):

h1 {
  text-align: center;
  color: red;
}

h2 {
  text-align: center;
  color: red;
}

p {
  text-align: center;
  color: red;
}

Será melhor agrupar os seletores, para minimizar o código.
Para agrupar seletores, separe cada seletor com uma vírgula.

h1, h2, p {
  text-align: center;
  color: red;
}

------------------------------------------------------------------
CSS How To - Como adicionar CSS

 Quando um navegador lê uma folha de estilo, ele formata o documento HTML de acordo com as informações na folha de estilo.
 Três maneiras de inserir CSS
 
 Existem três maneiras de inserir uma folha de estilo:
  CSS Externo
  CSS Interno
  CSS Inline

 CSS Externo
  Com uma folha de estilo externa, você pode alterar a aparência de um site inteiro alterando apenas um arquivo!
  Cada página HTML deve incluir uma referência ao arquivo de folha de estilo externo dentro do elemento <link>, dentro da seção head.

 Exemplo
  Os estilos externos são definidos no elemento <link>, dentro da seção <head> de uma página HTML:

<!DOCTYPE html>
<html>
<head>
 <link rel="stylesheet" href="mystyle.css">
</head>

<body>
<h1>This is a heading</h1>
<p>This is a paragraph.</p>
</body>
</html>

 Uma folha de estilo externa pode ser escrita em qualquer editor de texto e deve ser salva com uma extensão .css.
 O arquivo .css externo não deve conter nenhuma tag HTML.
 Esta é a aparência do arquivo "mystyle.css":

"mystyle.css"

body {
  background-color: lightblue;
}

h1 {
  color: navy;
  margin-left: 20px;
}

 Nota: Não adicione um espaço entre o valor da propriedade e a unidade (como margin-left: 20 px;). A maneira correta é:margin-left: 20px;


CSS Interno
 Uma folha de estilo interna pode ser usada se uma única página HTML tiver um estilo exclusivo.
 O estilo interno é definido dentro do elemento <style>, dentro da seção head.

 Exemplo
 Os estilos internos são definidos no elemento <style>, dentro da seção <head> de uma página HTML:

<!DOCTYPE html>
<html>

<head>
<style>
body {
  background-color: linen;
}

h1 {
  color: maroon;
  margin-left: 40px;
}
</style>
</head>

<body>
<h1>This is a heading</h1>
<p>This is a paragraph.</p>
</body>
</html>


CSS Inline
 Um estilo embutido pode ser usado para aplicar um estilo único a um único elemento.
 Para usar estilos embutidos, adicione o atributo de estilo ao elemento relevante. O atributo style pode conter qualquer propriedade CSS.

Exemplo
 Os estilos inline são definidos no atributo "style" do elemento relevante:

<!DOCTYPE html>
<html>
body>
 <h1 style="color:blue;text-align:center;">This is a heading</h1>
 <p style="color:red;">This is a paragraph.</p>
</body>
</html>

Dica: Um estilo embutido perde muitas das vantagens de uma folha de estilo (ao misturar conteúdo com apresentação). Use este método com moderação.


Várias folhas de estilo
 Se algumas propriedades foram definidas para o mesmo seletor (elemento) em diferentes folhas de estilo, o valor da última folha de estilo lida será usado.

 Suponha que uma folha de estilo externa tenha o seguinte estilo para o elemento <h1>:

h1 {
  color: navy;
}

Então, suponha que uma folha de estilo interna também tenha o seguinte estilo para o elemento <h1>:

h1 {
  color: orange;   
}


 No entanto, se o estilo interno for definido antes do link para a folha de estilo externa, os elementos <h1> serão "navy": 

<head>
<style>
h1 {
  color: orange;
}
</style>
<link rel="stylesheet" type="text/css" href="mystyle.css">
</head>


Ordem em Cascata
 Qual estilo será usado quando houver mais de um estilo especificado para um elemento HTML?
 Todos os estilos em uma página serão "cascateados" em uma nova folha de estilos "virtual" pelas seguintes regras, onde o número um tem a prioridade mais alta:

 Estilo embutido (dentro de um elemento HTML)
  Folhas de estilo externas e internas (na seção principal)
   Padrão do navegador
    Portanto, um estilo embutido tem a prioridade mais alta e substituirá os estilos externos e internos e os padrões do navegador.
------------------------------------------------------------------

Comentários CSS

 Os comentários CSS não são exibidos no navegador, mas podem ajudar a documentar seu código-fonte.
 Os comentários são usados ​​para explicar o código e podem ajudar quando você editar o código-fonte em uma data posterior.
 Os comentários são ignorados pelos navegadores.
 Um comentário CSS é colocado dentro do <style> elemento e começa /* e termina com */:

Exemplo
/* This is a single-line comment */
p {
  color: red;
}

Os comentários também podem abranger várias linhas: 

Exemplo
/* This is
a multi-line
comment */

p {
  color: red;
}

Comentários HTML e CSS
No tutorial de HTML, você aprendeu que pode adicionar comentários ao código-fonte HTML usando a <!--...-->sintaxe.

No exemplo a seguir, usamos uma combinação de comentários HTML e CSS:

<!DOCTYPE html>
<html>

<head>
<style>
p {
  color: red; /* Set text color to red */
}
</style>
</head>

<body>
<h2>My Heading</h2>

<!-- These paragraphs will be red -->
<p>Hello World!</p>
<p>This paragraph is styled with CSS.</p>
<p>CSS comments are not shown in the output.</p>

</body>
</html>


------------------------------------------------------------------
Cores CSS

 As cores são especificadas usando nomes de cores predefinidos ou valores RGB, HEX, HSL, RGBA, HSLA.

 Nomes de cores CSS
 Em CSS, uma cor pode ser especificada usando um nome de cor predefinido:

Tomate
laranja
Trapaceiro azul
MediumSeaGreen
cinza
Azul ardósia
Tolet
Cinza claro

 CSS / HTML suporta 140 nomes de cores padrão . : https://www.w3schools.com/colors/colors_names.asp
 CSS Background Color
 
Você pode definir a cor de fundo para elementos HTML:

 Exemplo
<h1 style="background-color:DodgerBlue;">Hello World</h1>
<p style="background-color:Tomato;">Lorem ipsum...</p>

Cor do Texto CSS
 Você pode definir a cor do texto:

 Exemplo
<h1 style="color:Tomato;">Hello World</h1>
<p style="color:DodgerBlue;">Lorem ipsum...</p>
<p style="color:MediumSeaGreen;">Ut wisi enim...</p>

CSS Border Color
 Você pode definir a cor das bordas:

Exemplo
<h1 style="border:2px solid Tomato;">Hello World</h1>
<h1 style="border:2px solid DodgerBlue;">Hello World</h1>
<h1 style="border:2px solid Violet;">Hello World</h1>

Valores de cores CSS
 Em CSS, as cores também podem ser especificadas usando valores RGB, valores HEX, valores HSL, valores RGBA e valores HSLA:

Igual ao nome da cor "Tomate":

 Exemplo
<h1 style="background-color:rgb(255, 99, 71);">...</h1>
<h1 style="background-color:#ff6347;">...</h1>
<h1 style="background-color:hsl(9, 100%, 64%);">...</h1>

<h1 style="background-color:rgba(255, 99, 71, 0.5);">...</h1>
<h1 style="background-color:hsla(9, 100%, 64%, 0.5);">...</h1>
------------------------------------------------------------------

CSS RGB Colors
 Um valor de cor RGB representa as fontes de luz VERMELHA, VERDE e AZUL.

Valor RGB
 Em CSS, uma cor pode ser especificada como um valor RGB, usando esta fórmula:
 rgb ( vermelho, verde , azul )
 Cada parâmetro (vermelho, verde e azul) define a intensidade da cor entre 0 e 255.
 Por exemplo, rgb (255, 0, 0) é exibido em vermelho, porque vermelho está definido com seu valor mais alto (255) e os outros são definidos como 0.
 Para exibir o preto, defina todos os parâmetros de cor para 0, como este: rgb (0, 0, 0).
 Para exibir o branco, defina todos os parâmetros de cor para 255, como este: rgb (255, 255, 255).

Valor RGBA
 Os valores de cores RGBA são uma extensão dos valores de cores RGB com um canal alfa - que especifica a opacidade de uma cor.
 Um valor de cor RGBA é especificado com:
 rgba ( vermelho, verde , azul, alfa )
 O parâmetro alfa é um número entre 0,0 (totalmente transparente) e 1,0 (nem um pouco transparente):


CSS HEX Colors
 Uma cor hexadecimal é especificada com: #RRGGBB, onde os inteiros hexadecimais RR (vermelho), GG (verde) e BB (azul) especificam os componentes da cor.

Valor HEX
 Em CSS, uma cor pode ser especificada usando um valor hexadecimal na forma:

# rrggbb

 Onde rr (vermelho), gg (verde) e bb (azul) são valores hexadecimais entre 00 e ff (igual ao decimal 0-255).
 Por exemplo, # ff0000 é exibido em vermelho, porque o vermelho é definido com seu valor mais alto (ff) e os outros são definidos com o valor mais baixo (00).

Valor HEX de 3 dígitos
 Às vezes, você verá um código hexadecimal de 3 dígitos na fonte CSS.
 O código hexadecimal de 3 dígitos é uma abreviação para alguns códigos hexadecimais de 6 dígitos.
 O código hexadecimal de 3 dígitos tem o seguinte formato:

<!DOCTYPE html>
<html>
<body>

<h1 style="background-color:#ff0000;">#ff0000</h1>
<h1 style="background-color:#0000ff;">#0000ff</h1>
<h1 style="background-color:#3cb371;">#3cb371</h1>
<h1 style="background-color:#ee82ee;">#ee82ee</h1>
<h1 style="background-color:#ffa500;">#ffa500</h1>
<h1 style="background-color:#6a5acd;">#6a5acd</h1>

<p>In HTML, you can specify colors using Hex values.</p>

</body>
</html>

# rgb

 Onde r, g e b representam os componentes vermelho, verde e azul com valores entre 0 e f.
 O código hexadecimal de 3 dígitos só pode ser usado quando ambos os valores (RR, GG e BB) são os mesmos para cada componente. Portanto, se temos # ff00cc, pode ser escrito assim: # f0c.

 <!DOCTYPE html>
<html>
<head>
<style>
body {
  background-color: #fc9; /* same as #ffcc99 */
}

h1 {
  color: #f0f; /* same as #ff00ff */
}

p {
  color: #b58; /* same as #bb5588 */
}
</style>
</head>
<body>

<h1>CSS 3-digit Hex Code</h1>
<p>This is a paragraph.</p>

</body>
</html>



CSS HSL Colors
 HSL significa matiz, saturação e luminosidade.

Valor HSL
 Em CSS, uma cor pode ser especificada usando matiz, saturação e luminosidade (HSL) na forma:

 hsl ( matiz , saturação , luminosidade )

 Matiz é um grau na roda de cores de 0 a 360. 0 é vermelho, 120 é verde e 240 é azul.
 A saturação é um valor percentual, 0% significa um tom de cinza e 100% é a cor total.
 A claridade também é uma porcentagem, 0% é preto, 50% não é nem claro nem escuro, 100% é branco

<!DOCTYPE html>
<html>
<body>

<h1 style="background-color:hsl(0, 100%, 50%);">hsl(0, 100%, 50%)</h1>
<h1 style="background-color:hsl(240, 100%, 50%);">hsl(240, 100%, 50%)</h1>
<h1 style="background-color:hsl(147, 50%, 47%);">hsl(147, 50%, 47%)</h1>
<h1 style="background-color:hsl(300, 76%, 72%);">hsl(300, 76%, 72%)</h1>
<h1 style="background-color:hsl(39, 100%, 50%);">hsl(39, 100%, 50%)</h1>
<h1 style="background-color:hsl(248, 53%, 58%);">hsl(248, 53%, 58%)</h1>

<p>In HTML, you can specify colors using HSL values.</p>

</body>
</html>

Saturação
 A saturação pode ser descrita como a intensidade de uma cor.
 100% é cor pura, sem tons de cinza
 50% é 50% cinza, mas você ainda pode ver a cor.
 0% é completamente cinza, você não pode mais ver a cor.


<!DOCTYPE html>
<html>
<body>

<h1 style="background-color:hsl(0, 100%, 50%);">hsl(0, 100%, 50%)</h1>
<h1 style="background-color:hsl(0, 80%, 50%);">hsl(0, 80%, 50%)</h1>
<h1 style="background-color:hsl(0, 60%, 50%);">hsl(0, 60%, 50%)</h1>
<h1 style="background-color:hsl(0, 40%, 50%);">hsl(0, 40%, 50%)</h1>
<h1 style="background-color:hsl(0, 20%, 50%);">hsl(0, 20%, 50%)</h1>
<h1 style="background-color:hsl(0, 0%, 50%);">hsl(0, 0%, 50%)</h1>

<p>With HSL colors, less saturation mean less color. 0% is completely gray.</p>

</body>
</html>

Leveza
 A claridade de uma cor pode ser descrita como a quantidade de luz que você deseja dar à cor, onde 0% significa sem luz (preto), 50% significa 50% de luz (nem escuro nem claro) 100% significa claridade total (branco).

<h1 style="background-color:hsl(0, 100%, 0%);">hsl(0, 100%, 0%)</h1>
<h1 style="background-color:hsl(0, 100%, 25%);">hsl(0, 100%, 25%)</h1>
<h1 style="background-color:hsl(0, 100%, 50%);">hsl(0, 100%, 50%)</h1>
<h1 style="background-color:hsl(0, 100%, 75%);">hsl(0, 100%, 75%)</h1>
<h1 style="background-color:hsl(0, 100%, 90%);">hsl(0, 100%, 90%)</h1>
<h1 style="background-color:hsl(0, 100%, 100%);">hsl(0, 100%, 100%)</h1>

Tons de cinza são frequentemente definidos definindo o matiz e a saturação para 0, e ajuste a claridade de 0% a 100% para obter tons mais escuros / mais claros:

<h1 style="background-color:hsl(0, 0%, 0%);">hsl(0, 0%, 0%)</h1>
<h1 style="background-color:hsl(0, 0%, 24%);">hsl(0, 0%, 24%)</h1>
<h1 style="background-color:hsl(0, 0%, 47%);">hsl(0, 0%, 47%)</h1>
<h1 style="background-color:hsl(0, 0%, 71%);">hsl(0, 0%, 71%)</h1>
<h1 style="background-color:hsl(0, 0%, 94%);">hsl(0, 0%, 94%)</h1>
<h1 style="background-color:hsl(0, 0%, 100%);">hsl(0, 0%, 100%)</h1>



Valor HSLA
 Os valores de cor HSLA são uma extensão dos valores de cor HSL com um canal alfa - que especifica a opacidade de uma cor.
 Um valor de cor HSLA é especificado com:

 hsla ( matiz, saturação , luminosidade, alfa )

 O parâmetro alfa é um número entre 0,0 (totalmente transparente) e 1,0 (nem um pouco transparente):

<h1 style="background-color:hsla(9, 100%, 64%, 0);">hsla(9, 100%, 64%, 0)</h1>
<h1 style="background-color:hsla(9, 100%, 64%, 0.2);">hsla(9, 100%, 64%, 0.2)</h1>
<h1 style="background-color:hsla(9, 100%, 64%, 0.4);">hsla(9, 100%, 64%, 0.4)</h1>
<h1 style="background-color:hsla(9, 100%, 64%, 0.6);">hsla(9, 100%, 64%, 0.6)</h1>
<h1 style="background-color:hsla(9, 100%, 64%, 0.8);">hsla(9, 100%, 64%, 0.8)</h1>
<h1 style="background-color:hsla(9, 100%, 64%, 1);">hsla(9, 100%, 64%, 1)</h1>
------------------------------------------------------------------
Fundos CSS

 Fundos CSS
 As propriedades de fundo CSS são usadas para adicionar efeitos de fundo para elementos.

Nestes capítulos, você aprenderá sobre as seguintes propriedades de fundo CSS:

background-color
background-image
background-repeat
background-attachment
background-position
background (propriedade abreviada)


CSS background-color
 A background-colorpropriedade especifica a cor de fundo de um elemento.

Exemplo
 A cor de fundo de uma página é definida assim:

body {
  background-color: lightblue;
}


<!DOCTYPE html>
<html>
<head>
<style>
body {
  background-color: lightblue;
}
</style>
</head>


Com CSS, uma cor é mais frequentemente especificada por:
 um nome de cor válido - como "vermelho"
 um valor HEX - como "# ff0000"
 um valor RGB - como "rgb (255,0,0)"

Consulte Valores de cores CSS para obter uma lista completa de valores de cores possíveis.

Outros Elementos
 Você pode definir a cor de fundo para qualquer elemento HTML:

Exemplo
 Aqui, os elementos <h1>, <p> e <div> terão cores de fundo diferentes: 

h1 {
  background-color: green;
}

div {
  background-color: lightblue;
}

p {
  background-color: yellow;
}

Opacidade / Transparência
 A opacity propriedade especifica a opacidade / transparência de um elemento. Pode assumir um valor de 0,0 a 1,0. Quanto menor o valor, mais transparente:

Exemplo

<head>
<style>
div {
  background-color: green;
}

div.first {
  opacity: 0.1;
}

div.second {
  opacity: 0.3;
}

div.third {
  opacity: 0.6;
}
</style>
</head>

Nota: Ao usar a opacity propriedade para adicionar transparência ao plano de fundo de um elemento, todos os seus elementos filhos herdam a mesma transparência. Isso pode tornar o texto dentro de um elemento totalmente transparente difícil de ler.

Transparência usando RGBA
 Se você não quiser aplicar opacidade aos elementos filhos, como em nosso exemplo acima, use os valores de cor RGBA. O exemplo a seguir define a opacidade da cor de fundo e não do texto:

100% opacidade
60% de opacidade
30% de opacidade
10% de opacidade

Você aprendeu em nosso Capítulo Cores CSS, que pode usar RGB como um valor de cor. Além de RGB, você pode usar um valor de cor RGB com um canal alfa (RGB A ) - que especifica a opacidade de uma cor.
Um valor de cor RGBA é especificado com: rgba (vermelho, verde, azul, alfa ). O parâmetro alfa é um número entre 0,0 (totalmente transparente) e 1,0 (totalmente opaco).

<head>
<style>
div {
  background: rgb(0, 128, 0);
}

div.first {
  background: rgba(0, 128, 0, 0.1);
}

div.second {
  background: rgba(0, 128, 0, 0.3);
}

div.third {
  background: rgba(0, 128, 0, 0.6);
}
</style>
</head>

--------------------------------------------------

CSS Background Image
 Imagem de fundo CSS
 A background-image propriedade especifica uma imagem a ser usada como plano de fundo de um elemento.
 Por padrão, a imagem é repetida para cobrir todo o elemento.

Exemplo
Defina a imagem de fundo de uma página: 

<!DOCTYPE html>
<html>
<head>
<style>
body {
  background-image: url("paper.gif");
}
</style>
</head>

Nota: Ao usar uma imagem de plano de fundo, use uma imagem que não perturbe o texto.

<head>
<style>
p {
  background-image: url("paper.gif");
}
</style>
</head>

-------------------------------------------------------

CSS Background Repeat

 Por padrão, a background-image propriedade repete uma imagem horizontal e verticalmente.
 Algumas imagens devem ser repetidas apenas horizontal ou verticalmente, ou ficarão estranhas.

<!DOCTYPE html>
<html>
<head>
<style>
body {
  background-image: url("gradient_bg.png");
  background-repeat: repeat-x;
}
</style>
</head>


Dica: para repetir uma imagem verticalmente, definabackground-repeat: repeat-y;


CSS background-repeat: no-repeat
 Mostrar a imagem de fundo apenas uma vez também é especificado pela background-repeatpropriedade:

Exemplo
 Mostrar a imagem de fundo apenas uma vez:

body {
  background-image: url("img_tree.png");
  background-repeat: no-repeat;
}



Posição de fundo CSS
 A background-positionpropriedade é usada para especificar a posição da imagem de fundo.

Exemplo
 Posicione a imagem de plano de fundo no canto superior direito: 

body {
  background-image: url("img_tree.png");
  background-repeat: no-repeat;
  background-position: right top;
}

------------------------------------------------------
CSS Background Attachment - Anexo de plano de fundo CSS

CSS background-attach
 A background-attachment propriedade especifica se a imagem de fundo deve rolar ou ser corrigida (não rola com o resto da página):

Exemplo
 Especifique que a imagem de fundo deve ser corrigida:

body {
  background-image: url("img_tree.png");
  background-repeat: no-repeat;
  background-position: right top;
  background-attachment: fixed;
}


Exemplo
 Especifique que a imagem de fundo deve rolar com o resto da página:

body {
  background-image: url("img_tree.png");
  background-repeat: no-repeat;
  background-position: right top;
  background-attachment: scroll;
}

-----------------------------------------------------
CSS Background Shorthand
 Plano de fundo CSS - propriedade abreviada
 Para encurtar o código, também é possível especificar todas as propriedades do fundo em uma única propriedade. Isso é chamado de propriedade abreviada.

Em vez de escrever:

body {
  background-color: #ffffff;
  background-image: url("img_tree.png");
  background-repeat: no-repeat;
  background-position: right top;
}

 Você pode usar a propriedade abreviada background:

Exemplo
Use a propriedade abreviada para definir as propriedades do plano de fundo em uma declaração:

body {
  background: #ffffff url("img_tree.png") no-repeat right top;
}

 Ao usar a propriedade abreviada, a ordem dos valores da propriedade é:

background-color
background-image
background-repeat
background-attachment
background-position
 
 Não importa se um dos valores da propriedade está faltando, desde que os outros estejam nesta ordem. Observe que não usamos a propriedade background-attachment nos exemplos acima, pois ela não tem um valor.


------------------------------------------------------------------
Bordas CSS - CSS Borders - Fronteira
 As propriedades da borda CSS permitem que você especifique o estilo, a largura e a cor da borda de um elemento.

CSS Border Style
 A border-style propriedade especifica que tipo de borda exibir.
 Os seguintes valores são permitidos:

dotted - Define uma borda pontilhada
dashed - Define uma borda tracejada
solid - Define uma borda sólida
double - Define uma borda dupla
groove- Define uma borda com sulcos 3D. O efeito depende do valor da cor da borda
ridge- Define uma borda estriada 3D. O efeito depende do valor da cor da borda
inset- Define uma borda de inserção 3D. O efeito depende do valor da cor da borda
outset- Define uma borda de início 3D. O efeito depende do valor da cor da borda
none - Não define nenhuma fronteira
hidden - Define uma borda oculta
A border-stylepropriedade pode ter de um a quatro valores (para a borda superior, borda direita, borda inferior e borda esquerda).


Exemplo
Demonstração dos diferentes estilos de borda:

p.dotted {border-style: dotted;}
p.dashed {border-style: dashed;}
p.solid {border-style: solid;}
p.double {border-style: double;}
p.groove {border-style: groove;}
p.ridge {border-style: ridge;}
p.inset {border-style: inset;}
p.outset {border-style: outset;}
p.none {border-style: none;}
p.hidden {border-style: hidden;}
p.mix {border-style: dotted dashed solid double;}

 Nota: Nenhuma das OUTRAS propriedades de borda CSS (sobre as quais você aprenderá mais nos próximos capítulos) terá QUALQUER efeito, a menos que a border-stylepropriedade seja definida!


CSS Border Width - Largura da Borda CSS
 Largura da Borda CSS
 A border-width propriedade especifica a largura das quatro bordas.
 A largura pode ser definida como um tamanho específico (em px, pt, cm, em, etc) ou usando um dos três valores predefinidos: fino, médio ou espesso:

 Exemplo
 Demonstração das diferentes larguras de borda:

 p.one {
  border-style: solid;
  border-width: 5px;
}

p.two {
  border-style: solid;
  border-width: medium;
}

p.three {
  border-style: dotted;
  border-width: 2px;
}

p.four {
  border-style: dotted;
  border-width: thick;
}


<!DOCTYPE html>
<html>
<head>
<style>
p.one {
  border-style: solid;
  border-width: 5px;
}

p.two {
  border-style: solid;
  border-width: medium;
}

p.three {
  border-style: dotted;
  border-width: 2px;
}

p.four {
  border-style: dotted;
  border-width: thick;
}

p.five {
  border-style: double;
  border-width: 15px;
}

p.six {
  border-style: double;
  border-width: thick;
}
</style>
</head>


Larguras Laterais Específicas
 A border-width propriedade pode ter de um a quatro valores (para a borda superior, borda direita, borda inferior e borda esquerda):

Exemplo
p.one {
  border-style: solid;
  border-width: 5px 20px; /* 5px top and bottom, 20px on the sides */
}

p.two {
  border-style: solid;
  border-width: 20px 5px; /* 20px top and bottom, 5px on the sides */
}

p.three {
  border-style: solid;
  border-width: 25px 10px 4px 35px; /* 25px top, 10px right, 4px bottom and 35px left */
}

----------------------------------------------
CSS Border Color

A border-color propriedade é usada para definir a cor das quatro bordas.

 A cor pode ser definida por:

 nome - especifique um nome de cor, como "vermelho"
 HEX - especifique um valor HEX, como "# ff0000"
 RGB - especifique um valor RGB, como "rgb (255,0,0)"
 HSL - especifique um valor HSL, como "hsl (0, 100%, 50%)"
 transparente
 
 Nota: Se border-color não for definido, ele herda a cor do elemento.

 Exemplo
 Demonstração das diferentes cores de borda:

p.one {
  border-style: solid;
  border-color: red;
}

p.two {
  border-style: solid;
  border-color: green;
}

p.three {
  border-style: dotted;
  border-color: blue;
}

Cores Laterais Específicas
 A border-color propriedade pode ter de um a quatro valores (para a borda superior, borda direita, borda inferior e borda esquerda). 

Exemplo
p.one {
  border-style: solid;
  border-color: red green blue yellow;   /* red top, green right, blue bottom and yellow left */
}

Valores HEX
 A cor da borda também pode ser especificada usando um valor hexadecimal (HEX):

Exemplo

p.one {
  border-style: solid;
  border-color: #ff0000; /* red */
}


Valores RGB
 Ou usando valores RGB:

Exemplo
p.one {
  border-style: solid;
  border-color: rgb(255, 0, 0); /* red */
}


Valores HSL
Você também pode usar valores HSL:

Exemplo
p.one {
  border-style: solid;
  border-color: hsl(0, 100%, 50%); /* red */
}

-----------------------------------------------------

CSS Border Sides

Borda CSS - Lados Individuais
 A partir dos exemplos nas páginas anteriores, você viu que é possível especificar uma borda diferente para cada lado.
 No CSS, também existem propriedades para especificar cada uma das bordas (superior, direita, inferior e esquerda):

Exemplo

p {
  border-top-style: dotted;
  border-right-style: solid;
  border-bottom-style: dotted;
  border-left-style: solid;
}

O exemplo acima dá o mesmo resultado que este:

Exemplo
p {
  border-style: dotted solid;
}


Então, é assim que funciona:

Se a border-style propriedade tiver quatro valores:

estilo de borda: pontilhada sólida dupla tracejada;
borda superior está pontilhada
borda direita é sólida
borda inferior é dupla
borda esquerda está tracejada
Se a border-stylepropriedade tiver três valores:

estilo de borda: duplo sólido pontilhado;
borda superior está pontilhada
as bordas direita e esquerda são sólidas
borda inferior é dupla
Se a border-stylepropriedade tiver dois valores:

estilo de borda: sólido pontilhado;
as bordas superior e inferior são pontilhadas
as bordas direita e esquerda são sólidas
Se a border-stylepropriedade tiver um valor:

estilo de borda: pontilhada;
todas as quatro bordas são pontilhadas

<style>
body {
  text-align: center;
}
/* Four values */
p.four {
  border-style: dotted solid double dashed;
}

/* Three values */
p.three {
  border-style: dotted solid double;
}

/* Two values */
p.two {
  border-style: dotted solid;
}

/* One value */
p.one {
  border-style: dotted;
}
</style>

A border-stylepropriedade é usada no exemplo acima. No entanto, também funciona com border-width e border-color.

-----------------------------------------------------

Propriedade de borda abreviada de CSS
 Borda CSS - propriedade abreviada
 Como você viu na página anterior, há muitas propriedades a serem consideradas ao lidar com bordas. 
 Para encurtar o código, também é possível especificar todas as propriedades de borda individuais em uma propriedade.
 A border propriedade é uma propriedade abreviada para as seguintes propriedades individuais de borda:

border-width
border-style (requerido)
border-color

Exemplo
p {
  border: 5px solid red;
}

Você também pode especificar todas as propriedades de borda individuais para apenas um lado:

Borda Esquerda
p {
  border-left: 6px solid red;
  background-color: lightgrey;
}

Borda inferior
p {
  border-bottom: 6px solid red;
  background-color: lightgrey;
}

-----------------------------------------------------

Bordas Arredondadas CSS
 Bordas Arredondadas CSS
 A border-radiuspropriedade é usada para adicionar bordas arredondadas a um elemento:

Exemplo
p {
  border: 2px solid red;
  border-radius: 5px;
}

Exemplo
<head>
<style>
p.normal {
  border: 2px solid red;
}

p.round1 {
  border: 2px solid red;
  border-radius: 5px;
}

p.round2 {
  border: 2px solid red;
  border-radius: 8px;
}

p.round3 {
  border: 2px solid red;
  border-radius: 12px;
}
</style>
</head>


Mais exemplos

 Todas as propriedades da borda superior em uma declaração
 Este exemplo demonstra uma propriedade abreviada para definir todas as propriedades da borda superior em uma declaração.

<head>
<style>
p {
  border-style: solid;
  border-top: thick double #ff0000;
}
</style>
</head>

 Definir o estilo da borda inferior
 Este exemplo demonstra como definir o estilo da borda inferior.

<head>
<style>
p {border-style: solid;}
p.none {border-bottom-style: none;}
p.dotted {border-bottom-style: dotted;}
p.dashed {border-bottom-style: dashed;}
p.solid {border-bottom-style: solid;}
p.double {border-bottom-style: double;}
p.groove {border-bottom-style: groove;}
p.ridge {border-bottom-style: ridge;}
p.inset {border-bottom-style: inset;}
p.outset {border-bottom-style: outset;}
</style>
</head>

 Definir a largura da borda esquerda
 Este exemplo demonstra como definir a largura da borda esquerda.

<head>
<style>
p {
  border-style: solid;
  border-left-width: 15px;
}
</style>
</head>

 Definir a cor das quatro bordas
 Este exemplo demonstra como definir a cor das quatro bordas. Pode ter de uma a quatro cores.

<head>
<style>
p.one {
  border-style: solid;
  border-color: #0000ff;
}

p.two {
  border-style: solid;
  border-color: #ff0000 #0000ff;
}

p.three {
  border-style: solid;
  border-color: #ff0000 #00ff00 #0000ff;
}

p.four {
  border-style: solid;
  border-color: #ff0000 #00ff00 #0000ff rgb(250,0,255);
}
</style>
</head>

 Definir a cor da borda direita
 Este exemplo demonstra como definir a cor da borda direita.

<head>
<style>
p {
  border-style: solid;
  border-right-color: #ff0000;
}
</style>
</head>

------------------------------------------------------------------
CSS Margins

CSS Margins
 As margens são usadas para criar espaço ao redor dos elementos, fora de quaisquer bordas definidas.

CSS Margins
 As margin propriedades CSS são usadas para criar espaço ao redor dos elementos, fora de quaisquer bordas definidas.
 Com CSS, você tem controle total sobre as margens. Existem propriedades para definir a margem para cada lado de um elemento (superior, direita, inferior e esquerda).

Margem - Lados Individuais
 CSS tem propriedades para especificar a margem de cada lado de um elemento:

margin-top
margin-right
margin-bottom
margin-left

Todas as propriedades de margem podem ter os seguintes valores:

auto - o navegador calcula a margem
length - comprimento - especifica uma margem em px, pt, cm, etc.
% - especifica uma margem em % da largura do elemento que o contém
inherit - herdar - especifica que a margem deve ser herdada do elemento pai

Dica: valores negativos são permitidos.

Exemplo
 Defina margens diferentes para todos os quatro lados de um elemento <p>:

p {
  margin-top: 100px;
  margin-bottom: 100px;
  margin-right: 150px;
  margin-left: 80px;
}

Dica: valores negativos são permitidos.

<head>
<style>
div {
  border: 1px solid black;
  margin-top: 100px;
  margin-bottom: 100px;
  margin-right: 150px;
  margin-left: 80px;
  background-color: lightblue;
}
</style>
</head>

--------------------------------------------

Margem - Propriedade abreviada
 Para encurtar o código, é possível especificar todas as propriedades de margem em uma propriedade.

 A margin propriedade é uma propriedade abreviada para as seguintes propriedades de margem individuais:

margin-top
margin-right
margin-bottom
margin-left
Então, é assim que funciona:

Se a margin propriedade tiver quatro valores:

margem: 25px 50px 75px 100px;
 a margem superior é 25px
 a margem direita é 50px
 margem inferior é 75px
 a margem esquerda é 100px

Exemplo
 Use a propriedade abreviação de margem com quatro valores:

p {
  margin: 25px 50px 75px 100px;
}


Se a margin propriedade tiver dois valores:

margem: 25px 50px;
as margens superior e inferior são 25px
margens direita e esquerda são 50px
Exemplo
Use a propriedade abreviação de margem com dois valores: 

p {
  margin: 25px 50px;
}

Se a margin propriedade tiver um valor:

margem: 25px;
todas as quatro margens têm 25px
Exemplo
Use a propriedade abreviação de margem com um valor: 

p {
  margin: 25px;
}


O valor automático
 Você pode definir a propriedade margin auto para centralizar horizontalmente o elemento em seu contêiner.
 O elemento então ocupará a largura especificada e o espaço restante será dividido igualmente entre as margens esquerda e direita.

Exemplo
Use margem: auto:

div {
  width: 300px;
  margin: auto;
  border: 1px solid red;
}


O valor herdado
 Este exemplo permite que a margem esquerda do elemento <p class = "ex1"> seja herdada do elemento pai (<div>):

Exemplo
Uso do valor herdado:

div {
  border: 1px solid red;
  margin-left: 100px;
}

p.ex1 {
  margin-left: inherit;
}

Exemplo
<head>
<style>
div {
  border: 1px solid red;
  margin-left: 100px;
}

p.ex1 {
  margin-left: inherit;
}
</style>
</head>

---------------------------------

CSS Margin Collapse
 Às vezes, duas margens colapsam em uma única margem.

Redução da margem
 As margens superior e inferior dos elementos às vezes são reduzidas em uma única margem que é igual à maior das duas margens.
 Isso não acontece nas margens esquerda e direita! Apenas as margens superior e inferior!

Veja o seguinte exemplo:

Exemplo
 Demonstração de colapso da margem:

h1 {
  margin: 0 0 50px 0;
}

h2 {
  margin: 20px 0 0 0;
}

No exemplo acima, o elemento <h1> tem uma margem inferior de 50px e o elemento <h2> tem uma margem superior definida para 20px.
O bom senso parece sugerir que a margem vertical entre <h1> e <h2> seria um total de 70px (50px + 20px). Mas, devido ao colapso da margem, a margem real acaba sendo 50px.


------------------------------------------------------------------
Padding CSS

Padding CSS
 O preenchimento é usado para criar espaço ao redor do conteúdo de um elemento, dentro de quaisquer bordas definidas.

Padding CSS
 As padding propriedades CSS são usadas para gerar espaço ao redor do conteúdo de um elemento, dentro de quaisquer bordas definidas.
 Com CSS, você tem controle total sobre o preenchimento. Existem propriedades para definir o preenchimento para cada lado de um elemento (superior, direito, inferior e esquerdo).

Preenchimento - Lados Individuais
 CSS tem propriedades para especificar o preenchimento para cada lado de um elemento:

padding-top
padding-right
padding-bottom
padding-left

Todas as propriedades de preenchimento podem ter os seguintes valores:

length - comprimento - especifica um preenchimento em px, pt, cm, etc.
% - especifica um preenchimento em% da largura do elemento que o contém
inherit - herdar - especifica que o preenchimento deve ser herdado do elemento pai
 Nota: Valores negativos não são permitidos.

Exemplo
 Defina um preenchimento diferente para todos os quatro lados de um elemento <div>:  

div {
  padding-top: 50px;
  padding-right: 30px;
  padding-bottom: 50px;
  padding-left: 80px;
}
 

Preenchimento - propriedade abreviada
 Para encurtar o código, é possível especificar todas as propriedades de preenchimento em uma propriedade.

A padding propriedade é uma propriedade abreviada para as seguintes propriedades de preenchimento individuais:

padding-top
padding-right
padding-bottom
padding-left
Então, é assim que funciona:

Se a padding propriedade tiver quatro valores:

preenchimento: 25px 50px 75px 100px;
o preenchimento superior é 25px
o preenchimento direito é 50px
o preenchimento inferior é 75px
o preenchimento esquerdo é 100px

Exemplo
 Use a propriedade abreviada de preenchimento com quatro valores:

div {
  padding: 25px 50px 75px 100px;
}

Se a padding propriedade tiver três valores:

preenchimento: 25px 50px 75px;
o preenchimento superior é 25px
os preenchimentos direito e esquerdo têm 50px
o preenchimento inferior é 75px

Exemplo
 Use a propriedade abreviada de preenchimento com três valores: 

div {
  padding: 25px 50px 75px;
}


Se a padding propriedade tiver dois valores:

preenchimento: 25px 50px;
os preenchimentos superior e inferior têm 25 px
os preenchimentos direito e esquerdo têm 50px

Exemplo
 Use a propriedade abreviada de preenchimento com dois valores: 

div {
  padding: 25px 50px;
}

Se a padding propriedade tiver um valor:

preenchimento: 25px;
todos os quatro preenchimentos têm 25px

Exemplo
Use a propriedade abreviada de preenchimento com um valor: 

div {
  padding: 25px;
}

Preenchimento e largura do elemento
 
 A width propriedade CSS especifica a largura da área de conteúdo do elemento. A área de conteúdo é a parte dentro do preenchimento, borda e margem de um elemento ( o modelo de caixa ).

 Portanto, se um elemento tiver uma largura especificada, o preenchimento adicionado a esse elemento será adicionado à largura total do elemento. Muitas vezes, esse é um resultado indesejável.

Exemplo
 Aqui, o elemento <div> tem uma largura de 300 px. No entanto, a largura real do elemento <div> será 350px (300px + 25px de preenchimento esquerdo + 25px de preenchimento direito):

div {
  width: 300px;
  padding: 25px;
}

 Para manter a largura em 300 px, não importa a quantidade de preenchimento, você pode usar a box-sizingpropriedade. Isso faz com que o elemento mantenha sua largura; se você aumentar o preenchimento, o espaço de conteúdo disponível diminuirá.

Exemplo
 Use a propriedade box-sizing para manter a largura em 300 px, não importa a quantidade de preenchimento:

 <style>
div.ex1 {
  width: 300px;
  background-color: yellow;
}

div.ex2 {
  width: 300px;
  padding: 25px;
  box-sizing: border-box;
  background-color: lightblue;
}
</style>
</head>


Mais exemplos

 Definir o preenchimento esquerdo
 Este exemplo demonstra como definir o preenchimento esquerdo de um elemento <p>.

<head>
<style>
p.padding {
  padding-left: 2cm;
}
p.padding2 {
  padding-left: 50%;
}
</style>
</head>

 Definir o preenchimento correto
 Este exemplo demonstra como definir o preenchimento correto de um elemento <p>.

<head>
<style>
p.padding {
  padding-right: 2cm;
}

p.padding2 {
  padding-right: 50%;
}
</style>
</head>

 Definir o preenchimento superior
 Este exemplo demonstra como definir o preenchimento superior de um elemento <p>.

<head>
<style>
p.padding {
  padding-top: 2cm;
}

p.padding2 {
  padding-top: 50%;
}
</style>
</head>

 Definir o preenchimento inferior
 Este exemplo demonstra como definir o preenchimento inferior de um elemento <p>.

<head>
<style>
p.padding {
  padding-bottom:2cm;
}

p.padding2 {
  padding-bottom:50%;
}
</style>
</head>
------------------------------------------------------------------
Altura / largura CSS - CSS Height and Width

 O CSS height e as width propriedades são usados ​​para definir a altura e a largura de um elemento.
 A max-width propriedade CSS é usada para definir a largura máxima de um elemento.

Exemplo

<style>
div {
  height: 50px;
  width: 100%;
  border: 1px solid #4CAF50;
}
</style>
</head>


CSS Configuração de altura e largura
 As propriedades heighte widthsão usadas para definir a altura e a largura de um elemento. 
 As propriedades de altura e largura não incluem preenchimento, bordas ou margens. Ele define a altura / largura da área dentro do preenchimento, borda e margem do elemento.


Valores CSS de altura e largura
 As propriedades height e width podem ter os seguintes valores:

auto- Este é o padrão. O navegador calcula a altura e largura
length - Define a altura / largura em px, cm etc.
% - Define a altura / largura em porcentagem do bloco que o contém
initial - Define a altura / largura para seu valor padrão
inherit - A altura / largura será herdada de seu valor pai

Exemplo
Defina a altura e a largura de um elemento <div>:

div {
  height: 200px;
  width: 50%;
  background-color: powderblue;
}


Nota: Lembre - se de que as propriedades height e width não incluem preenchimento, bordas ou margens! Eles definem a altura / largura da área dentro do preenchimento, borda e margem do elemento!

Configurando largura máxima
 A max-width propriedade é usada para definir a largura máxima de um elemento.
 O max-width pode ser especificado em valores de comprimento , como px, cm, etc., ou em porcentagem (%) do bloco que o contém, ou definido como nenhum (este é o padrão. Significa que não há largura máxima).

 O problema <div> acima ocorre quando a janela do navegador é menor que a largura do elemento (500px). O navegador então adiciona uma barra de rolagem horizontal à página.

 Em max-width vez disso, o uso , nessa situação, melhorará o manuseio do navegador de pequenas janelas.

Dica: arraste a janela do navegador para menos de 500 px de largura, para ver a diferença entre os dois divs!

Este elemento tem uma altura de 100 pixels e uma largura máxima de 500 pixels.
Nota: O valor das max-width substituições de propriedade width.

Exemplo
Este elemento <div> tem uma altura de 100 pixels e uma largura máxima de 500 pixels: 

div {
  max-width: 500px;
  height: 100px;
  background-color: powderblue;
}


Experimente você mesmo - exemplos

Defina a altura e a largura dos elementos
Este exemplo demonstra como definir a altura e a largura de diferentes elementos.

Definir a altura e largura de uma imagem usando porcentagem
Este exemplo demonstra como definir a altura e largura de uma imagem usando um valor percentual.

Definir a largura mínima e a largura máxima de um elemento
Este exemplo demonstra como definir uma largura mínima e máxima de um elemento usando um valor de pixel.

Definir altura mínima e altura máxima de um elemento
Este exemplo demonstra como definir uma altura mínima e máxima de um elemento usando um valor de pixel.

Todas as propriedades de dimensão CSS

height
max-height
max-width
min-height
min-width
width

------------------------------------------------------------------
CSS Box Model

 Todos os elementos HTML podem ser considerados caixas.
 O CSS Box Model
 Em CSS, o termo "modelo de caixa" é usado para falar sobre design e layout.
 O modelo de caixa CSS é essencialmente uma caixa que envolve todos os elementos HTML. Consiste em: margens, bordas, preenchimento e o conteúdo real. A imagem abaixo ilustra o modelo da caixa:

Explicação das diferentes partes:

Conteúdo - o conteúdo da caixa, onde o texto e as imagens aparecem
Preenchimento - limpa uma área ao redor do conteúdo. O preenchimento é transparente
Borda - uma borda que circunda o preenchimento e o conteúdo
Margem - Limpa uma área fora da borda. A margem é transparente
O modelo de caixa nos permite adicionar uma borda ao redor dos elementos e definir o espaço entre os elementos.

Exemplo
Demonstração do modelo da caixa:

div {
  width: 300px;
  border: 15px solid green;
  padding: 50px;
  margin: 20px;
}


Largura e altura de um elemento
 Para definir a largura e a altura de um elemento corretamente em todos os navegadores, você precisa saber como funciona o modelo de caixa.

 Importante: ao definir as propriedades de largura e altura de um elemento com CSS, você apenas define a largura e a altura da área de conteúdo. Para calcular o tamanho total de um elemento, você também deve adicionar preenchimento, bordas e margens.

Exemplo
Este elemento <div> terá uma largura total de 350 px: 

div {
  width: 320px;
  padding: 10px;
  border: 5px solid gray;
  margin: 0;
}

Aqui está o cálculo:
320 px (largura)
+ 20 px ( preenchimento esquerdo + direito)
+ 10 px (margem esquerda + direita) + 0 px (margem esquerda + direita)
= 350 px
 A largura total de um elemento deve ser calculada assim:
 Largura total do elemento = largura + preenchimento esquerdo + preenchimento direito + borda esquerda + borda direita + margem esquerda + margem direita

 A altura total de um elemento deve ser calculada assim:
 Altura total do elemento = altura + preenchimento superior + preenchimento inferior + borda superior + borda inferior + margem superior + margem inferior
------------------------------------------------------------------
------------------------------------------------------------------

CSS Outline

 Um contorno é uma linha desenhada fora da borda do elemento.

 <head>
<style>
p {
  border: 2px solid black;
  outline: #4CAF50 solid 10px;
  margin: auto;  
  padding: 20px;
  text-align: center;
}
</style>
</head>

CSS Outline
 Um contorno é uma linha que é desenhada ao redor dos elementos, FORA das bordas, para fazer o elemento "se destacar".

 CSS tem as seguintes propriedades de contorno:

outline-style
outline-color
outline-width
outline-offset
outline

CSS Outline Style
A outline-style propriedade especifica o estilo do contorno e pode ter um dos seguintes valores:

dotted - Define um contorno pontilhado
dashed - Define um contorno tracejada
solid - Define um contorno sólido
double - Define um contorno duplo
groove - Define um contorno 3D sulcado
ridge - Define um contorno 3D estriado
inset - Define um contorno de inserção 3D
outset - Define um contorno de início 3D
none - Não define nenhum contorno
hidden - Define um contorno oculto
O exemplo a seguir mostra os diferentes outline-stylevalores:

Exemplo
<head>
<style>
p {outline-color:red;}

p.dotted {outline-style: dotted;}
p.dashed {outline-style: dashed;}
p.solid {outline-style: solid;}
p.double {outline-style: double;}
p.groove {outline-style: groove;}
p.ridge {outline-style: ridge;}
p.inset {outline-style: inset;}
p.outset {outline-style: outset;}
</style>
</head>

Nota: Nenhuma das outras propriedades de contorno (sobre as quais você aprenderá mais nos próximos capítulos) terá QUALQUER efeito, a menos que a outline-style propriedade seja definida!

----------------------------------------------------------------
Largura de Contorno CSS
 Largura de Contorno CSS
 A outline-width propriedade especifica a largura do contorno e pode ter um dos seguintes valores:

fino (normalmente 1px)
médio (normalmente 3px)
grosso (normalmente 5px)
Um tamanho específico (em px, pt, cm, em, etc)

<head>
<style>
p.ex1 {
  border: 1px solid black;
  outline-style: solid;
  outline-color: red;
  outline-width: thin;
}

p.ex2 {
  border: 1px solid black;
  outline-style: solid;
  outline-color: red;
  outline-width: medium;
}

p.ex3 {
  border: 1px solid black;
  outline-style: solid;
  outline-color: red;
  outline-width: thick;
}

p.ex4 {
  border: 1px solid black;
  outline-style: solid;
  outline-color: red;
  outline-width: 4px;
}
</style>
</head>

------------------------------------------------------------------

CSS Outline Color
 A outline-color propriedade é usada para definir a cor do contorno.

A cor pode ser definida por:

nome - especifique um nome de cor, como "vermelho"
HEX - especifique um valor hexadecimal, como "# ff0000"
RGB - especifique um valor RGB, como "rgb (255,0,0)"
HSL - especifique um valor HSL, como "hsl (0, 100%, 50%)"
inverter - executa uma inversão de cores (o que garante que o contorno seja visível, independentemente da cor de fundo)

<head>
<style>
p.ex1 {
  border: 2px solid black;
  outline-style: solid;
  outline-color: red;
}

p.ex2 {
  border: 2px solid black;
  outline-style: dotted;
  outline-color: blue;
}

p.ex3 {
  border: 2px solid black;
  outline-style: outset;
  outline-color: grey;
}
</style>
</head>

Valores HEX
 A cor do contorno também pode ser especificada usando um valor hexadecimal (HEX):

Exemplo
p.ex1 {
  outline-style: solid;
  outline-color: #ff0000; /* red */
}

Valores RGB
 Ou usando valores RGB:

Exemplo
p.ex1 {
  outline-style: solid;
  outline-color: rgb(255, 0, 0); /* red */
}

Valores HSL
 Você também pode usar valores HSL:

Exemplo
p.ex1 {
  outline-style: solid;
  outline-color: hsl(0, 100%, 50%); /* red */
}

Inverter cor
 O exemplo a seguir usa outline-color: invert, que realiza uma inversão de cores. Isso garante que o contorno seja visível, independentemente da cor de fundo:

Um contorno sólido invertido.

Exemplo
p.ex1 {
  border: 1px solid yellow;
  outline-style: solid;
  outline-color: invert;
}

--------------------------------------------------------------
CSS Outline Shorthand
Esboço CSS - propriedade abreviada

 A outline propriedade é uma propriedade abreviada para definir as seguintes propriedades individuais de contorno:

outline-width
outline-style (obrigatório)
outline-color

A outline propriedade é especificada como um, dois ou três valores da lista acima. A ordem dos valores não importa.

<head>
<style>
p.ex1 {outline: dashed;}
p.ex2 {outline: dotted red;}
p.ex3 {outline: 5px solid yellow;}
p.ex4 {outline: thick ridge pink;}
</style>
</head>
--------------------------------------------------------

CSS Outline Offset

 A outline-offset propriedade adiciona espaço entre um contorno e a borda / borda de um elemento. O espaço entre um elemento e seu contorno é transparente.
 O exemplo a seguir especifica um contorno de 15px fora da borda da borda:

<head>
<style>
p {
  margin: 30px;
  border: 1px solid black;
  outline: 2px solid red;
  outline-offset: 10px;
}
</style>
</head>

Todas as propriedades CSS Outline
Property	Description
outline	A shorthand property for setting outline-width, outline-style, and outline-color in one declaration
outline-color	Sets the color of an outline
outline-offset	Specifies the space between an outline and the edge or border of an element
outline-style	Sets the style of an outline
outline-width	Sets the width of an outline

------------------------------------------------------------------
------------------------------------------------------------------

Texto CSS

 CSS tem muitas propriedades para formatar texto.
/* -------------------------------------- */ 

<head>
<style>
div {
  border: 1px solid gray;
  padding: 8px;
}

h1 {
  text-align: center;
  text-transform: uppercase;
  color: #4CAF50;
}

p {
  text-indent: 50px;
  text-align: justify;
  letter-spacing: 3px;
}

a {
  text-decoration: none;
  color: #008CBA;
}
</style>
</head>
/* -------------------------------------- */

Cor do texto
 A color propriedade é usada para definir a cor do texto. A cor é especificada por:

um nome de cor - como "vermelho"
um valor HEX - como "# ff0000"
um valor RGB - como "rgb (255,0,0)"

A cor de texto padrão de uma página é definida no seletor de corpo.

Exemplo
body {
  color: blue;
}

h1 {
  color: green;
}

Nota: Para CSS compatível com W3C: Se você definir a color propriedade, também deve definir o background-color.

Cor do texto e cor do fundo
 Neste exemplo, definimos a background-color propriedade e a color propriedade:

Exemplo

<head>
<style>
body {
  background-color: lightgrey;
  color: blue;
}

h1 {
  background-color: black;
  color: white;
}
</style>
</head>

----------------------------------------------------------------
Alinhamento de Texto
 A text-align propriedade é usada para definir o alinhamento horizontal de um texto.
 Um texto pode ser alinhado à esquerda ou à direita, centralizado ou justificado.

<head>
<style>
h1 {
  text-align: center;
}

h2 {
  text-align: left;
}

h3 {
  text-align: right;
}
</style>
</head>

Quando a text-align propriedade é definida como "justificar", cada linha é esticada para que todas as linhas tenham a mesma largura e as margens esquerda e direita sejam retas (como em revistas e jornais):

Exemplo

<head>
<style>
div {
  border: 1px solid black;
  padding: 10px;
  width: 200px;
  height: 200px;
  text-align: justify;
}
</style>
</head>


Direção do texto
 As propriedades directione unicode-bidipodem ser usadas para alterar a direção do texto de um elemento:

Exemplo
p {
  direction: rtl;
  unicode-bidi: bidi-override;
}

Alinhamento vertical
 A vertical-align propriedade define o alinhamento vertical de um elemento.

<head>
<style>
img.top {
  vertical-align: top;
}

img.middle {
  vertical-align: middle;
}

img.bottom {
  vertical-align: bottom;
}
</style>
</head>

----------------------------------------------------------------

Decoração de Texto CSS
 Decoração de Texto
 A text-decoration propriedade é usada para definir ou remover decorações do texto.

O valor text-decoration: none; é frequentemente usado para remover sublinhados de links:

Exemplo
<head>
<style>
a {
  text-decoration: none;
}
</style>
</head>

Os outros text-decoration valores são usados ​​para decorar o texto:

<head>
<style>
h1 {
  text-decoration: overline;
}

h2 {
  text-decoration: line-through;
}

h3 {
  text-decoration: underline;
}
</style>
</head>

Nota: Não é recomendável sublinhar um texto que não seja um link, pois isso costuma confundir o leitor.

----------------------------------------------------------------

Transformação de Texto CSS

 Transformação de Texto 
 A text-transform propriedade é usada para especificar letras maiúsculas e minúsculas em um texto.
 Pode ser usado para transformar tudo em letras maiúsculas ou minúsculas, ou colocar a primeira letra de cada palavra em maiúscula:


------------------------------------------------------------------
Fontes CSS


------------------------------------------------------------------
Ícones CSS


------------------------------------------------------------------
Links CSS


------------------------------------------------------------------
Listas CSS


------------------------------------------------------------------
Tabelas CSS


------------------------------------------------------------------
Exibição CSS


------------------------------------------------------------------
CSS Max-width


------------------------------------------------------------------
Posição CSS


------------------------------------------------------------------
Estouro de CSS


------------------------------------------------------------------
CSS Float


------------------------------------------------------------------
Bloco CSS Inline


------------------------------------------------------------------
CSS Align


------------------------------------------------------------------
Combinadores CSS


------------------------------------------------------------------
Pseudo classe CSS


------------------------------------------------------------------
Pseudoelemento CSS


------------------------------------------------------------------
Opacidade CSS


------------------------------------------------------------------
Barra de Navegação CSS


------------------------------------------------------------------
CSS Dropdowns


------------------------------------------------------------------
Galeria de imagens CSS


------------------------------------------------------------------
CSS Image Sprites


------------------------------------------------------------------
Seletores de atributos CSS


------------------------------------------------------------------
Formulários CSS


------------------------------------------------------------------
Contadores CSS


------------------------------------------------------------------
Layout de site CSS


------------------------------------------------------------------
Unidades CSS


------------------------------------------------------------------
Especificidade CSS


------------------------------------------------------------------
CSS! Importante


------------------------------------------------------------------



------------------------------------------------------------------
CSS Avançado


------------------------------------------------------------------
Cantos Arredondados CSS


------------------------------------------------------------------
Imagens de borda CSS


------------------------------------------------------------------
Fundos CSS


------------------------------------------------------------------
Cores CSS


------------------------------------------------------------------
Palavras-chave CSS Color


------------------------------------------------------------------
Gradientes CSS


------------------------------------------------------------------
Sombras CSS


------------------------------------------------------------------
Efeitos de texto CSS


------------------------------------------------------------------
CSS Web Fonts


------------------------------------------------------------------
CSS 2D Transforms


------------------------------------------------------------------
CSS 3D Transforms


------------------------------------------------------------------
Transições CSS


------------------------------------------------------------------
Animações CSS


------------------------------------------------------------------
Dicas de CSS


------------------------------------------------------------------
Imagens de estilo CSS


------------------------------------------------------------------
Reflexão de imagem CSS


------------------------------------------------------------------
CSS object-fit


------------------------------------------------------------------
Posição do objeto CSS


------------------------------------------------------------------
Botões CSS


------------------------------------------------------------------
Paginação CSS


------------------------------------------------------------------
CSS Multiple Columns


------------------------------------------------------------------
Interface de usuário CSS


------------------------------------------------------------------
Variáveis ​​CSS


------------------------------------------------------------------
Tamanho da caixa CSS


------------------------------------------------------------------
Consultas de mídia CSS


------------------------------------------------------------------


------------------------------------------------------------------
Exemplos de CSS MQ


------------------------------------------------------------------
CSS Flexbox


------------------------------------------------------------------



------------------------------------------------------------------
CSS responsivo


------------------------------------------------------------------
RWD Intro


------------------------------------------------------------------
RWD Viewport


------------------------------------------------------------------
RWD Grid View


------------------------------------------------------------------
Consultas de mídia RWD


------------------------------------------------------------------
Imagens RWD


------------------------------------------------------------------
Vídeos RWD


------------------------------------------------------------------
RWD Frameworks


------------------------------------------------------------------
Modelos RWD


------------------------------------------------------------------



------------------------------------------------------------------
CSS Grid


------------------------------------------------------------------
Grid Intro


------------------------------------------------------------------
Grid Container


------------------------------------------------------------------
Item de grade


------------------------------------------------------------------



------------------------------------------------------------------
Exemplos CSS


------------------------------------------------------------------
Modelos CSS


------------------------------------------------------------------
Exemplos CSS


------------------------------------------------------------------
Quiz CSS


------------------------------------------------------------------
Exercícios CSS


------------------------------------------------------------------
Certificado CSS


------------------------------------------------------------------



------------------------------------------------------------------
Referências CSS


------------------------------------------------------------------
Referência CSS


------------------------------------------------------------------
Seletores CSS


------------------------------------------------------------------
Funções CSS


------------------------------------------------------------------
Aural de referência CSS


------------------------------------------------------------------
CSS Web Safe Fonts


------------------------------------------------------------------
CSS Animatable


------------------------------------------------------------------


------------------------------------------------------------------
Unidades CSS


------------------------------------------------------------------
Conversor CSS PX-EM


------------------------------------------------------------------
Cores CSS


------------------------------------------------------------------
Valores de cores CSS


------------------------------------------------------------------
Valores padrão CSS


------------------------------------------------------------------
Suporte a navegador CSS


------------------------------------------------------------------


------------------------------------------------------------------


------------------------------------------------------------------